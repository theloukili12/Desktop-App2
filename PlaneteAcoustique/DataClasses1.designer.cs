#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PlaneteAcoustique
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TissyrePartner")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertCongées(Congées instance);
    partial void UpdateCongées(Congées instance);
    partial void DeleteCongées(Congées instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertHistoriqueEmploye(HistoriqueEmploye instance);
    partial void UpdateHistoriqueEmploye(HistoriqueEmploye instance);
    partial void DeleteHistoriqueEmploye(HistoriqueEmploye instance);
    partial void InsertEmploye(Employe instance);
    partial void UpdateEmploye(Employe instance);
    partial void DeleteEmploye(Employe instance);
    partial void InsertDemandeCongé(DemandeCongé instance);
    partial void UpdateDemandeCongé(DemandeCongé instance);
    partial void DeleteDemandeCongé(DemandeCongé instance);
    partial void InsertCongéesAccordé(CongéesAccordé instance);
    partial void UpdateCongéesAccordé(CongéesAccordé instance);
    partial void DeleteCongéesAccordé(CongéesAccordé instance);
    partial void InsertCongéesRefusé(CongéesRefusé instance);
    partial void UpdateCongéesRefusé(CongéesRefusé instance);
    partial void DeleteCongéesRefusé(CongéesRefusé instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TissyrePartnerConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Congées> Congées
		{
			get
			{
				return this.GetTable<Congées>();
			}
		}
		
		public System.Data.Linq.Table<Service> Service
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<HistoriqueEmploye> HistoriqueEmploye
		{
			get
			{
				return this.GetTable<HistoriqueEmploye>();
			}
		}
		
		public System.Data.Linq.Table<Employe> Employe
		{
			get
			{
				return this.GetTable<Employe>();
			}
		}
		
		public System.Data.Linq.Table<DemandeCongé> DemandeCongé
		{
			get
			{
				return this.GetTable<DemandeCongé>();
			}
		}
		
		public System.Data.Linq.Table<CongéesAccordé> CongéesAccordé
		{
			get
			{
				return this.GetTable<CongéesAccordé>();
			}
		}
		
		public System.Data.Linq.Table<CongéesRefusé> CongéesRefusé
		{
			get
			{
				return this.GetTable<CongéesRefusé>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Congées")]
	public partial class Congées : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCongée;
		
		private int _IdEmploye;
		
		private System.Nullable<System.DateTime> _DateCongé;
		
		private string _Motif;
		
		private System.Nullable<int> _NombreJour;
		
		private EntityRef<Employe> _Employe;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCongéeChanging(int value);
    partial void OnIdCongéeChanged();
    partial void OnIdEmployeChanging(int value);
    partial void OnIdEmployeChanged();
    partial void OnDateCongéChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCongéChanged();
    partial void OnMotifChanging(string value);
    partial void OnMotifChanged();
    partial void OnNombreJourChanging(System.Nullable<int> value);
    partial void OnNombreJourChanged();
    #endregion
		
		public Congées()
		{
			this._Employe = default(EntityRef<Employe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCongée", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdCongée
		{
			get
			{
				return this._IdCongée;
			}
			set
			{
				if ((this._IdCongée != value))
				{
					this.OnIdCongéeChanging(value);
					this.SendPropertyChanging();
					this._IdCongée = value;
					this.SendPropertyChanged("IdCongée");
					this.OnIdCongéeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmploye", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdEmploye
		{
			get
			{
				return this._IdEmploye;
			}
			set
			{
				if ((this._IdEmploye != value))
				{
					if (this._Employe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEmployeChanging(value);
					this.SendPropertyChanging();
					this._IdEmploye = value;
					this.SendPropertyChanged("IdEmploye");
					this.OnIdEmployeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCongé", DbType="Date")]
		public System.Nullable<System.DateTime> DateCongé
		{
			get
			{
				return this._DateCongé;
			}
			set
			{
				if ((this._DateCongé != value))
				{
					this.OnDateCongéChanging(value);
					this.SendPropertyChanging();
					this._DateCongé = value;
					this.SendPropertyChanged("DateCongé");
					this.OnDateCongéChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motif", DbType="NVarChar(50)")]
		public string Motif
		{
			get
			{
				return this._Motif;
			}
			set
			{
				if ((this._Motif != value))
				{
					this.OnMotifChanging(value);
					this.SendPropertyChanging();
					this._Motif = value;
					this.SendPropertyChanged("Motif");
					this.OnMotifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreJour", DbType="Int")]
		public System.Nullable<int> NombreJour
		{
			get
			{
				return this._NombreJour;
			}
			set
			{
				if ((this._NombreJour != value))
				{
					this.OnNombreJourChanging(value);
					this.SendPropertyChanging();
					this._NombreJour = value;
					this.SendPropertyChanged("NombreJour");
					this.OnNombreJourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_Congées", Storage="_Employe", ThisKey="IdEmploye", OtherKey="IdPersonne", IsForeignKey=true)]
		public Employe Employe
		{
			get
			{
				return this._Employe.Entity;
			}
			set
			{
				Employe previousValue = this._Employe.Entity;
				if (((previousValue != value) 
							|| (this._Employe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employe.Entity = null;
						previousValue.Congées.Remove(this);
					}
					this._Employe.Entity = value;
					if ((value != null))
					{
						value.Congées.Add(this);
						this._IdEmploye = value.IdPersonne;
					}
					else
					{
						this._IdEmploye = default(int);
					}
					this.SendPropertyChanged("Employe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdService;
		
		private string _NomService;
		
		private System.Nullable<decimal> _SalaireNet;
		
		private EntitySet<HistoriqueEmploye> _HistoriqueEmploye;
		
		private EntitySet<Employe> _Employe;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdServiceChanging(int value);
    partial void OnIdServiceChanged();
    partial void OnNomServiceChanging(string value);
    partial void OnNomServiceChanged();
    partial void OnSalaireNetChanging(System.Nullable<decimal> value);
    partial void OnSalaireNetChanged();
    #endregion
		
		public Service()
		{
			this._HistoriqueEmploye = new EntitySet<HistoriqueEmploye>(new Action<HistoriqueEmploye>(this.attach_HistoriqueEmploye), new Action<HistoriqueEmploye>(this.detach_HistoriqueEmploye));
			this._Employe = new EntitySet<Employe>(new Action<Employe>(this.attach_Employe), new Action<Employe>(this.detach_Employe));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdService", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdService
		{
			get
			{
				return this._IdService;
			}
			set
			{
				if ((this._IdService != value))
				{
					this.OnIdServiceChanging(value);
					this.SendPropertyChanging();
					this._IdService = value;
					this.SendPropertyChanged("IdService");
					this.OnIdServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomService", DbType="NVarChar(50)")]
		public string NomService
		{
			get
			{
				return this._NomService;
			}
			set
			{
				if ((this._NomService != value))
				{
					this.OnNomServiceChanging(value);
					this.SendPropertyChanging();
					this._NomService = value;
					this.SendPropertyChanged("NomService");
					this.OnNomServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaireNet", DbType="Money")]
		public System.Nullable<decimal> SalaireNet
		{
			get
			{
				return this._SalaireNet;
			}
			set
			{
				if ((this._SalaireNet != value))
				{
					this.OnSalaireNetChanging(value);
					this.SendPropertyChanging();
					this._SalaireNet = value;
					this.SendPropertyChanged("SalaireNet");
					this.OnSalaireNetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_HistoriqueEmploye", Storage="_HistoriqueEmploye", ThisKey="IdService", OtherKey="IdService")]
		public EntitySet<HistoriqueEmploye> HistoriqueEmploye
		{
			get
			{
				return this._HistoriqueEmploye;
			}
			set
			{
				this._HistoriqueEmploye.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Employe", Storage="_Employe", ThisKey="IdService", OtherKey="IdService")]
		public EntitySet<Employe> Employe
		{
			get
			{
				return this._Employe;
			}
			set
			{
				this._Employe.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HistoriqueEmploye(HistoriqueEmploye entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_HistoriqueEmploye(HistoriqueEmploye entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_Employe(Employe entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Employe(Employe entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HistoriqueEmploye")]
	public partial class HistoriqueEmploye : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdEmploye;
		
		private string _Cin;
		
		private string _Nom;
		
		private string _Prenom;
		
		private string _Adresse;
		
		private string _Ville;
		
		private string _Telephone;
		
		private string _Email;
		
		private string _Nationalite;
		
		private string _Pays;
		
		private System.Nullable<System.DateTime> _DN;
		
		private System.Nullable<System.DateTime> _DateEmbauche;
		
		private System.Nullable<System.DateTime> _DateSortie;
		
		private System.Nullable<int> _IdService;
		
		private EntityRef<Service> _Service;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdEmployeChanging(int value);
    partial void OnIdEmployeChanged();
    partial void OnCinChanging(string value);
    partial void OnCinChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    partial void OnVilleChanging(string value);
    partial void OnVilleChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNationaliteChanging(string value);
    partial void OnNationaliteChanged();
    partial void OnPaysChanging(string value);
    partial void OnPaysChanged();
    partial void OnDNChanging(System.Nullable<System.DateTime> value);
    partial void OnDNChanged();
    partial void OnDateEmbaucheChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEmbaucheChanged();
    partial void OnDateSortieChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSortieChanged();
    partial void OnIdServiceChanging(System.Nullable<int> value);
    partial void OnIdServiceChanged();
    #endregion
		
		public HistoriqueEmploye()
		{
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmploye", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdEmploye
		{
			get
			{
				return this._IdEmploye;
			}
			set
			{
				if ((this._IdEmploye != value))
				{
					this.OnIdEmployeChanging(value);
					this.SendPropertyChanging();
					this._IdEmploye = value;
					this.SendPropertyChanged("IdEmploye");
					this.OnIdEmployeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cin", DbType="NVarChar(50)")]
		public string Cin
		{
			get
			{
				return this._Cin;
			}
			set
			{
				if ((this._Cin != value))
				{
					this.OnCinChanging(value);
					this.SendPropertyChanging();
					this._Cin = value;
					this.SendPropertyChanged("Cin");
					this.OnCinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="NVarChar(50)")]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="NVarChar(50)")]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresse", DbType="NVarChar(100)")]
		public string Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				if ((this._Adresse != value))
				{
					this.OnAdresseChanging(value);
					this.SendPropertyChanging();
					this._Adresse = value;
					this.SendPropertyChanged("Adresse");
					this.OnAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ville", DbType="NVarChar(50)")]
		public string Ville
		{
			get
			{
				return this._Ville;
			}
			set
			{
				if ((this._Ville != value))
				{
					this.OnVilleChanging(value);
					this.SendPropertyChanging();
					this._Ville = value;
					this.SendPropertyChanged("Ville");
					this.OnVilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationalite", DbType="VarChar(10)")]
		public string Nationalite
		{
			get
			{
				return this._Nationalite;
			}
			set
			{
				if ((this._Nationalite != value))
				{
					this.OnNationaliteChanging(value);
					this.SendPropertyChanging();
					this._Nationalite = value;
					this.SendPropertyChanged("Nationalite");
					this.OnNationaliteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pays", DbType="NVarChar(50)")]
		public string Pays
		{
			get
			{
				return this._Pays;
			}
			set
			{
				if ((this._Pays != value))
				{
					this.OnPaysChanging(value);
					this.SendPropertyChanging();
					this._Pays = value;
					this.SendPropertyChanged("Pays");
					this.OnPaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DN", DbType="Date")]
		public System.Nullable<System.DateTime> DN
		{
			get
			{
				return this._DN;
			}
			set
			{
				if ((this._DN != value))
				{
					this.OnDNChanging(value);
					this.SendPropertyChanging();
					this._DN = value;
					this.SendPropertyChanged("DN");
					this.OnDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEmbauche", DbType="Date")]
		public System.Nullable<System.DateTime> DateEmbauche
		{
			get
			{
				return this._DateEmbauche;
			}
			set
			{
				if ((this._DateEmbauche != value))
				{
					this.OnDateEmbaucheChanging(value);
					this.SendPropertyChanging();
					this._DateEmbauche = value;
					this.SendPropertyChanged("DateEmbauche");
					this.OnDateEmbaucheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSortie", DbType="Date")]
		public System.Nullable<System.DateTime> DateSortie
		{
			get
			{
				return this._DateSortie;
			}
			set
			{
				if ((this._DateSortie != value))
				{
					this.OnDateSortieChanging(value);
					this.SendPropertyChanging();
					this._DateSortie = value;
					this.SendPropertyChanged("DateSortie");
					this.OnDateSortieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdService", DbType="Int")]
		public System.Nullable<int> IdService
		{
			get
			{
				return this._IdService;
			}
			set
			{
				if ((this._IdService != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdServiceChanging(value);
					this.SendPropertyChanging();
					this._IdService = value;
					this.SendPropertyChanged("IdService");
					this.OnIdServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_HistoriqueEmploye", Storage="_Service", ThisKey="IdService", OtherKey="IdService", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.HistoriqueEmploye.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.HistoriqueEmploye.Add(this);
						this._IdService = value.IdService;
					}
					else
					{
						this._IdService = default(Nullable<int>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employe")]
	public partial class Employe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPersonne;
		
		private string _Nom;
		
		private string _Prenom;
		
		private string _Cin;
		
		private string _Adresse;
		
		private string _Ville;
		
		private string _Telephone;
		
		private string _Email;
		
		private string _Nationalite;
		
		private string _Pays;
		
		private System.Nullable<System.DateTime> _DN;
		
		private System.Nullable<System.DateTime> _DateEmbauche;
		
		private string _Situationfamilial;
		
		private System.Nullable<int> _Nbenfants;
		
		private System.Nullable<int> _IdService;
		
		private System.Nullable<int> _jrsrestantconges;
		
		private System.Data.Linq.Binary _Image;
		
		private EntitySet<Congées> _Congées;
		
		private EntitySet<DemandeCongé> _DemandeCongé;
		
		private EntitySet<CongéesAccordé> _CongéesAccordé;
		
		private EntitySet<CongéesRefusé> _CongéesRefusé;
		
		private EntityRef<Service> _Service;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPersonneChanging(int value);
    partial void OnIdPersonneChanged();
    partial void OnNomChanging(string value);
    partial void OnNomChanged();
    partial void OnPrenomChanging(string value);
    partial void OnPrenomChanged();
    partial void OnCinChanging(string value);
    partial void OnCinChanged();
    partial void OnAdresseChanging(string value);
    partial void OnAdresseChanged();
    partial void OnVilleChanging(string value);
    partial void OnVilleChanged();
    partial void OnTelephoneChanging(string value);
    partial void OnTelephoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNationaliteChanging(string value);
    partial void OnNationaliteChanged();
    partial void OnPaysChanging(string value);
    partial void OnPaysChanged();
    partial void OnDNChanging(System.Nullable<System.DateTime> value);
    partial void OnDNChanged();
    partial void OnDateEmbaucheChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEmbaucheChanged();
    partial void OnSituationfamilialChanging(string value);
    partial void OnSituationfamilialChanged();
    partial void OnNbenfantsChanging(System.Nullable<int> value);
    partial void OnNbenfantsChanged();
    partial void OnIdServiceChanging(System.Nullable<int> value);
    partial void OnIdServiceChanged();
    partial void OnjrsrestantcongesChanging(System.Nullable<int> value);
    partial void OnjrsrestantcongesChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    #endregion
		
		public Employe()
		{
			this._Congées = new EntitySet<Congées>(new Action<Congées>(this.attach_Congées), new Action<Congées>(this.detach_Congées));
			this._DemandeCongé = new EntitySet<DemandeCongé>(new Action<DemandeCongé>(this.attach_DemandeCongé), new Action<DemandeCongé>(this.detach_DemandeCongé));
			this._CongéesAccordé = new EntitySet<CongéesAccordé>(new Action<CongéesAccordé>(this.attach_CongéesAccordé), new Action<CongéesAccordé>(this.detach_CongéesAccordé));
			this._CongéesRefusé = new EntitySet<CongéesRefusé>(new Action<CongéesRefusé>(this.attach_CongéesRefusé), new Action<CongéesRefusé>(this.detach_CongéesRefusé));
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPersonne", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPersonne
		{
			get
			{
				return this._IdPersonne;
			}
			set
			{
				if ((this._IdPersonne != value))
				{
					this.OnIdPersonneChanging(value);
					this.SendPropertyChanging();
					this._IdPersonne = value;
					this.SendPropertyChanged("IdPersonne");
					this.OnIdPersonneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nom
		{
			get
			{
				return this._Nom;
			}
			set
			{
				if ((this._Nom != value))
				{
					this.OnNomChanging(value);
					this.SendPropertyChanging();
					this._Nom = value;
					this.SendPropertyChanged("Nom");
					this.OnNomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prenom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Prenom
		{
			get
			{
				return this._Prenom;
			}
			set
			{
				if ((this._Prenom != value))
				{
					this.OnPrenomChanging(value);
					this.SendPropertyChanging();
					this._Prenom = value;
					this.SendPropertyChanged("Prenom");
					this.OnPrenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cin", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Cin
		{
			get
			{
				return this._Cin;
			}
			set
			{
				if ((this._Cin != value))
				{
					this.OnCinChanging(value);
					this.SendPropertyChanging();
					this._Cin = value;
					this.SendPropertyChanged("Cin");
					this.OnCinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresse", DbType="NVarChar(100)")]
		public string Adresse
		{
			get
			{
				return this._Adresse;
			}
			set
			{
				if ((this._Adresse != value))
				{
					this.OnAdresseChanging(value);
					this.SendPropertyChanging();
					this._Adresse = value;
					this.SendPropertyChanged("Adresse");
					this.OnAdresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ville", DbType="NVarChar(50)")]
		public string Ville
		{
			get
			{
				return this._Ville;
			}
			set
			{
				if ((this._Ville != value))
				{
					this.OnVilleChanging(value);
					this.SendPropertyChanging();
					this._Ville = value;
					this.SendPropertyChanged("Ville");
					this.OnVilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telephone", DbType="NVarChar(50)")]
		public string Telephone
		{
			get
			{
				return this._Telephone;
			}
			set
			{
				if ((this._Telephone != value))
				{
					this.OnTelephoneChanging(value);
					this.SendPropertyChanging();
					this._Telephone = value;
					this.SendPropertyChanged("Telephone");
					this.OnTelephoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nationalite", DbType="VarChar(10)")]
		public string Nationalite
		{
			get
			{
				return this._Nationalite;
			}
			set
			{
				if ((this._Nationalite != value))
				{
					this.OnNationaliteChanging(value);
					this.SendPropertyChanging();
					this._Nationalite = value;
					this.SendPropertyChanged("Nationalite");
					this.OnNationaliteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pays", DbType="NVarChar(50)")]
		public string Pays
		{
			get
			{
				return this._Pays;
			}
			set
			{
				if ((this._Pays != value))
				{
					this.OnPaysChanging(value);
					this.SendPropertyChanging();
					this._Pays = value;
					this.SendPropertyChanged("Pays");
					this.OnPaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DN", DbType="Date")]
		public System.Nullable<System.DateTime> DN
		{
			get
			{
				return this._DN;
			}
			set
			{
				if ((this._DN != value))
				{
					this.OnDNChanging(value);
					this.SendPropertyChanging();
					this._DN = value;
					this.SendPropertyChanged("DN");
					this.OnDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEmbauche", DbType="Date")]
		public System.Nullable<System.DateTime> DateEmbauche
		{
			get
			{
				return this._DateEmbauche;
			}
			set
			{
				if ((this._DateEmbauche != value))
				{
					this.OnDateEmbaucheChanging(value);
					this.SendPropertyChanging();
					this._DateEmbauche = value;
					this.SendPropertyChanged("DateEmbauche");
					this.OnDateEmbaucheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Situationfamilial", DbType="NVarChar(50)")]
		public string Situationfamilial
		{
			get
			{
				return this._Situationfamilial;
			}
			set
			{
				if ((this._Situationfamilial != value))
				{
					this.OnSituationfamilialChanging(value);
					this.SendPropertyChanging();
					this._Situationfamilial = value;
					this.SendPropertyChanged("Situationfamilial");
					this.OnSituationfamilialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nbenfants", DbType="Int")]
		public System.Nullable<int> Nbenfants
		{
			get
			{
				return this._Nbenfants;
			}
			set
			{
				if ((this._Nbenfants != value))
				{
					this.OnNbenfantsChanging(value);
					this.SendPropertyChanging();
					this._Nbenfants = value;
					this.SendPropertyChanged("Nbenfants");
					this.OnNbenfantsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdService", DbType="Int")]
		public System.Nullable<int> IdService
		{
			get
			{
				return this._IdService;
			}
			set
			{
				if ((this._IdService != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdServiceChanging(value);
					this.SendPropertyChanging();
					this._IdService = value;
					this.SendPropertyChanged("IdService");
					this.OnIdServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jrsrestantconges", DbType="Int")]
		public System.Nullable<int> jrsrestantconges
		{
			get
			{
				return this._jrsrestantconges;
			}
			set
			{
				if ((this._jrsrestantconges != value))
				{
					this.OnjrsrestantcongesChanging(value);
					this.SendPropertyChanging();
					this._jrsrestantconges = value;
					this.SendPropertyChanged("jrsrestantconges");
					this.OnjrsrestantcongesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_Congées", Storage="_Congées", ThisKey="IdPersonne", OtherKey="IdEmploye")]
		public EntitySet<Congées> Congées
		{
			get
			{
				return this._Congées;
			}
			set
			{
				this._Congées.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_DemandeCongé", Storage="_DemandeCongé", ThisKey="IdPersonne", OtherKey="IdEmploye")]
		public EntitySet<DemandeCongé> DemandeCongé
		{
			get
			{
				return this._DemandeCongé;
			}
			set
			{
				this._DemandeCongé.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_CongéesAccordé", Storage="_CongéesAccordé", ThisKey="IdPersonne", OtherKey="IdEmploye")]
		public EntitySet<CongéesAccordé> CongéesAccordé
		{
			get
			{
				return this._CongéesAccordé;
			}
			set
			{
				this._CongéesAccordé.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_CongéesRefusé", Storage="_CongéesRefusé", ThisKey="IdPersonne", OtherKey="IdEmploye")]
		public EntitySet<CongéesRefusé> CongéesRefusé
		{
			get
			{
				return this._CongéesRefusé;
			}
			set
			{
				this._CongéesRefusé.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Employe", Storage="_Service", ThisKey="IdService", OtherKey="IdService", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Employe.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Employe.Add(this);
						this._IdService = value.IdService;
					}
					else
					{
						this._IdService = default(Nullable<int>);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Congées(Congées entity)
		{
			this.SendPropertyChanging();
			entity.Employe = this;
		}
		
		private void detach_Congées(Congées entity)
		{
			this.SendPropertyChanging();
			entity.Employe = null;
		}
		
		private void attach_DemandeCongé(DemandeCongé entity)
		{
			this.SendPropertyChanging();
			entity.Employe = this;
		}
		
		private void detach_DemandeCongé(DemandeCongé entity)
		{
			this.SendPropertyChanging();
			entity.Employe = null;
		}
		
		private void attach_CongéesAccordé(CongéesAccordé entity)
		{
			this.SendPropertyChanging();
			entity.Employe = this;
		}
		
		private void detach_CongéesAccordé(CongéesAccordé entity)
		{
			this.SendPropertyChanging();
			entity.Employe = null;
		}
		
		private void attach_CongéesRefusé(CongéesRefusé entity)
		{
			this.SendPropertyChanging();
			entity.Employe = this;
		}
		
		private void detach_CongéesRefusé(CongéesRefusé entity)
		{
			this.SendPropertyChanging();
			entity.Employe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DemandeCongé")]
	public partial class DemandeCongé : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCongée;
		
		private System.DateTime _DateDebut;
		
		private System.DateTime _DateFin;
		
		private string _Motif;
		
		private System.Nullable<int> _IdEmploye;
		
		private EntityRef<Employe> _Employe;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCongéeChanging(int value);
    partial void OnIdCongéeChanged();
    partial void OnDateDebutChanging(System.DateTime value);
    partial void OnDateDebutChanged();
    partial void OnDateFinChanging(System.DateTime value);
    partial void OnDateFinChanged();
    partial void OnMotifChanging(string value);
    partial void OnMotifChanged();
    partial void OnIdEmployeChanging(System.Nullable<int> value);
    partial void OnIdEmployeChanged();
    #endregion
		
		public DemandeCongé()
		{
			this._Employe = default(EntityRef<Employe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCongée", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdCongée
		{
			get
			{
				return this._IdCongée;
			}
			set
			{
				if ((this._IdCongée != value))
				{
					this.OnIdCongéeChanging(value);
					this.SendPropertyChanging();
					this._IdCongée = value;
					this.SendPropertyChanged("IdCongée");
					this.OnIdCongéeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDebut", DbType="Date NOT NULL")]
		public System.DateTime DateDebut
		{
			get
			{
				return this._DateDebut;
			}
			set
			{
				if ((this._DateDebut != value))
				{
					this.OnDateDebutChanging(value);
					this.SendPropertyChanging();
					this._DateDebut = value;
					this.SendPropertyChanged("DateDebut");
					this.OnDateDebutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateFin", DbType="Date NOT NULL")]
		public System.DateTime DateFin
		{
			get
			{
				return this._DateFin;
			}
			set
			{
				if ((this._DateFin != value))
				{
					this.OnDateFinChanging(value);
					this.SendPropertyChanging();
					this._DateFin = value;
					this.SendPropertyChanged("DateFin");
					this.OnDateFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motif", DbType="NVarChar(50)")]
		public string Motif
		{
			get
			{
				return this._Motif;
			}
			set
			{
				if ((this._Motif != value))
				{
					this.OnMotifChanging(value);
					this.SendPropertyChanging();
					this._Motif = value;
					this.SendPropertyChanged("Motif");
					this.OnMotifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmploye", DbType="Int")]
		public System.Nullable<int> IdEmploye
		{
			get
			{
				return this._IdEmploye;
			}
			set
			{
				if ((this._IdEmploye != value))
				{
					if (this._Employe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEmployeChanging(value);
					this.SendPropertyChanging();
					this._IdEmploye = value;
					this.SendPropertyChanged("IdEmploye");
					this.OnIdEmployeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_DemandeCongé", Storage="_Employe", ThisKey="IdEmploye", OtherKey="IdPersonne", IsForeignKey=true)]
		public Employe Employe
		{
			get
			{
				return this._Employe.Entity;
			}
			set
			{
				Employe previousValue = this._Employe.Entity;
				if (((previousValue != value) 
							|| (this._Employe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employe.Entity = null;
						previousValue.DemandeCongé.Remove(this);
					}
					this._Employe.Entity = value;
					if ((value != null))
					{
						value.DemandeCongé.Add(this);
						this._IdEmploye = value.IdPersonne;
					}
					else
					{
						this._IdEmploye = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CongéesAccordé")]
	public partial class CongéesAccordé : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCongée;
		
		private int _IdEmploye;
		
		private System.Nullable<System.DateTime> _DateCongé;
		
		private string _Motif;
		
		private System.Nullable<int> _NombreJour;
		
		private EntityRef<Employe> _Employe;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCongéeChanging(int value);
    partial void OnIdCongéeChanged();
    partial void OnIdEmployeChanging(int value);
    partial void OnIdEmployeChanged();
    partial void OnDateCongéChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCongéChanged();
    partial void OnMotifChanging(string value);
    partial void OnMotifChanged();
    partial void OnNombreJourChanging(System.Nullable<int> value);
    partial void OnNombreJourChanged();
    #endregion
		
		public CongéesAccordé()
		{
			this._Employe = default(EntityRef<Employe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCongée", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdCongée
		{
			get
			{
				return this._IdCongée;
			}
			set
			{
				if ((this._IdCongée != value))
				{
					this.OnIdCongéeChanging(value);
					this.SendPropertyChanging();
					this._IdCongée = value;
					this.SendPropertyChanged("IdCongée");
					this.OnIdCongéeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmploye", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdEmploye
		{
			get
			{
				return this._IdEmploye;
			}
			set
			{
				if ((this._IdEmploye != value))
				{
					if (this._Employe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEmployeChanging(value);
					this.SendPropertyChanging();
					this._IdEmploye = value;
					this.SendPropertyChanged("IdEmploye");
					this.OnIdEmployeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCongé", DbType="Date")]
		public System.Nullable<System.DateTime> DateCongé
		{
			get
			{
				return this._DateCongé;
			}
			set
			{
				if ((this._DateCongé != value))
				{
					this.OnDateCongéChanging(value);
					this.SendPropertyChanging();
					this._DateCongé = value;
					this.SendPropertyChanged("DateCongé");
					this.OnDateCongéChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motif", DbType="NVarChar(50)")]
		public string Motif
		{
			get
			{
				return this._Motif;
			}
			set
			{
				if ((this._Motif != value))
				{
					this.OnMotifChanging(value);
					this.SendPropertyChanging();
					this._Motif = value;
					this.SendPropertyChanged("Motif");
					this.OnMotifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreJour", DbType="Int")]
		public System.Nullable<int> NombreJour
		{
			get
			{
				return this._NombreJour;
			}
			set
			{
				if ((this._NombreJour != value))
				{
					this.OnNombreJourChanging(value);
					this.SendPropertyChanging();
					this._NombreJour = value;
					this.SendPropertyChanged("NombreJour");
					this.OnNombreJourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_CongéesAccordé", Storage="_Employe", ThisKey="IdEmploye", OtherKey="IdPersonne", IsForeignKey=true)]
		public Employe Employe
		{
			get
			{
				return this._Employe.Entity;
			}
			set
			{
				Employe previousValue = this._Employe.Entity;
				if (((previousValue != value) 
							|| (this._Employe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employe.Entity = null;
						previousValue.CongéesAccordé.Remove(this);
					}
					this._Employe.Entity = value;
					if ((value != null))
					{
						value.CongéesAccordé.Add(this);
						this._IdEmploye = value.IdPersonne;
					}
					else
					{
						this._IdEmploye = default(int);
					}
					this.SendPropertyChanged("Employe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CongéesRefusé")]
	public partial class CongéesRefusé : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdCongée;
		
		private int _IdEmploye;
		
		private System.Nullable<System.DateTime> _DateCongé;
		
		private string _Motif;
		
		private System.Nullable<int> _NombreJour;
		
		private EntityRef<Employe> _Employe;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdCongéeChanging(int value);
    partial void OnIdCongéeChanged();
    partial void OnIdEmployeChanging(int value);
    partial void OnIdEmployeChanged();
    partial void OnDateCongéChanging(System.Nullable<System.DateTime> value);
    partial void OnDateCongéChanged();
    partial void OnMotifChanging(string value);
    partial void OnMotifChanged();
    partial void OnNombreJourChanging(System.Nullable<int> value);
    partial void OnNombreJourChanged();
    #endregion
		
		public CongéesRefusé()
		{
			this._Employe = default(EntityRef<Employe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdCongée", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdCongée
		{
			get
			{
				return this._IdCongée;
			}
			set
			{
				if ((this._IdCongée != value))
				{
					this.OnIdCongéeChanging(value);
					this.SendPropertyChanging();
					this._IdCongée = value;
					this.SendPropertyChanged("IdCongée");
					this.OnIdCongéeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdEmploye", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdEmploye
		{
			get
			{
				return this._IdEmploye;
			}
			set
			{
				if ((this._IdEmploye != value))
				{
					if (this._Employe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdEmployeChanging(value);
					this.SendPropertyChanging();
					this._IdEmploye = value;
					this.SendPropertyChanged("IdEmploye");
					this.OnIdEmployeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCongé", DbType="Date")]
		public System.Nullable<System.DateTime> DateCongé
		{
			get
			{
				return this._DateCongé;
			}
			set
			{
				if ((this._DateCongé != value))
				{
					this.OnDateCongéChanging(value);
					this.SendPropertyChanging();
					this._DateCongé = value;
					this.SendPropertyChanged("DateCongé");
					this.OnDateCongéChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Motif", DbType="NVarChar(50)")]
		public string Motif
		{
			get
			{
				return this._Motif;
			}
			set
			{
				if ((this._Motif != value))
				{
					this.OnMotifChanging(value);
					this.SendPropertyChanging();
					this._Motif = value;
					this.SendPropertyChanged("Motif");
					this.OnMotifChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreJour", DbType="Int")]
		public System.Nullable<int> NombreJour
		{
			get
			{
				return this._NombreJour;
			}
			set
			{
				if ((this._NombreJour != value))
				{
					this.OnNombreJourChanging(value);
					this.SendPropertyChanging();
					this._NombreJour = value;
					this.SendPropertyChanged("NombreJour");
					this.OnNombreJourChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employe_CongéesRefusé", Storage="_Employe", ThisKey="IdEmploye", OtherKey="IdPersonne", IsForeignKey=true)]
		public Employe Employe
		{
			get
			{
				return this._Employe.Entity;
			}
			set
			{
				Employe previousValue = this._Employe.Entity;
				if (((previousValue != value) 
							|| (this._Employe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employe.Entity = null;
						previousValue.CongéesRefusé.Remove(this);
					}
					this._Employe.Entity = value;
					if ((value != null))
					{
						value.CongéesRefusé.Add(this);
						this._IdEmploye = value.IdPersonne;
					}
					else
					{
						this._IdEmploye = default(int);
					}
					this.SendPropertyChanged("Employe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
